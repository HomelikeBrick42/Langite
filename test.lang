const Bool = distinct enum {
    true: distinct struct {},
    false: distinct struct {},
}

const Foo = distinct struct {}
const Bar = distinct struct {
    a: type_of(Foo), // should be `Type`
}

const foo = fn(T: Type) => {
    match T {
        Foo => Bar,
        _ => T,
    }
}

const bar = fn(const T: Type, const U: Type, f: fn(x: T) -> U, x: T) -> U {
    f(x)
}
